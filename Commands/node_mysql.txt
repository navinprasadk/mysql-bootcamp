
1.) Connecting nodejs to MySQL

var mysql = require('mysql');


var connection = mysql.createConnection({
  
host     : 'localhost',
  
user     : 'navinprasadk',  //your username
  
database : 'join_us'        //the name of your db
  
// password : process.env.MYSQL_PW, 
});



2.) 

var mysql = require('mysql');


var connection = mysql.createConnection({
  
host     : 'localhost',
  
user     : 'navinprasadk',  //your username
  
database : 'join_us'        //the name of your db
  
// password : process.env.MYSQL_PW, 
});
var q = 'SELECT CURTIME() as time, CURDATE() as date, NOW() as now';

connection.query(q, function (error, results, fields) {
  
if (error) throw error;
  
console.log(results[0].time);
  
console.log(results[0].date);
  
console.log(results[0].now);

});


connection.end();



3.)



var mysql = require('mysql');


var connection = mysql.createConnection({
  
host     : 'localhost',
  
user     : 'navinprasadk',  //your username
  
database : 'join_us'        //the name of your db
  
// password : process.env.MYSQL_PW, 
});
var q = 'SELECT * FROM users';

connection.query(q, function (error, results, fields) {
  
if (error) throw error;
  
console.log(results);
});


connection.end();




4.)



The Code To INSERT 500 Random Users
var mysql = require('mysql');
var faker = require('faker');
var connection = mysql.createConnection({
  host     : 'localhost',
  user     : 'learnwithcolt',
  database : 'join_us'
});
var data = [];
for(var i = 0; i < 500; i++){
    data.push([
        faker.internet.email(),
        faker.date.past()
    ]);
} 
var q = 'INSERT INTO users (email, created_at) VALUES ?';
connection.query(q, [data], function(err, result) {
  console.log(err);
  console.log(result);
});
 
connection.end();






Solutions To 500 Users Exercises



-- Challenge 1

SELECT 
    DATE_FORMAT(MIN(created_at), "%M %D %Y") as earliest_date 
FROM users;



-- Challenge 2

SELECT * 
FROM   users 
WHERE  created_at = (SELECT Min(created_at) 
                     FROM   users); 



-- Challenge 3

SELECT Monthname(created_at) AS month, 
       Count(*)              AS count 
FROM   users 
GROUP  BY month 
ORDER  BY count DESC; 



-- Challenge 4

SELECT Count(*) AS yahoo_users 
FROM   users 
WHERE  email LIKE '%@yahoo.com'; 



-- Challenge 5

SELECT CASE 
         WHEN email LIKE '%@gmail.com' THEN 'gmail' 
         WHEN email LIKE '%@yahoo.com' THEN 'yahoo' 
         WHEN email LIKE '%@hotmail.com' THEN 'hotmail' 
         ELSE 'other' 
       end      AS provider, 
       Count(*) AS total_users 
FROM   users 
GROUP  BY provider 
ORDER  BY total_users DESC; 
 
